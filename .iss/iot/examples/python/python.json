[{"path":"iot-devkit-samples-625c05c58017930e752e738afaa1fcda1b2232e6/analog-in","sha":"625c05c58017930e752e738afaa1fcda1b2232e6","example":{"name":"Analog Input","category":"Grove Starter Kit","description":"Demonstrate how to read an analog voltage value from an input pin using the MRAA library, any sensor that outputs a variable voltage can be used with this example code Suitable ones in the Grove Starter Kit are the Rotary Angle Sensor, Light Sensor, Sound Sensor, Temperature Sensor.","author":"Intel Corporation","date":"2015-06-13","platform":{"hwreq":["Analog sensor connected to an analog pin."],"libs":["mraa"]},"sample_readme_uri":"https://github.com/intel-iot-devkit/iot-devkit-samples/blob/iss2020-update1/analog-in/README.md","categories":["Code Samples/Sensors"],"dependencies":["mraa","iot-plugin"],"main":"analog-in.py","projectOptions":[{"projectType":"python"}]}},{"path":"iot-devkit-samples-625c05c58017930e752e738afaa1fcda1b2232e6/digital-in","sha":"625c05c58017930e752e738afaa1fcda1b2232e6","example":{"name":"Digital Input","category":"Grove Starter Kit","description":"Demonstrate how to read a digital value from an input pin using the MRAA library. Suitable ones in the Grove Starter Kit are the Button and Touch Sensor, connected to digital pin 4 (Grove Base Shield Port D4).","author":"Intel Corporation","date":"2016-09-29","platform":{"hwreq":["GPIO digital input pin"],"libs":["mraa"]},"sample_readme_uri":"https://github.com/intel-iot-devkit/iot-devkit-samples/blob/iss2020-update1/digital-in/README.md","categories":["Code Samples/Sensors"],"dependencies":["mraa","iot-plugin"],"main":"digital-in.py","projectOptions":[{"projectType":"python"}]}},{"path":"iot-devkit-samples-625c05c58017930e752e738afaa1fcda1b2232e6/hello-world","sha":"625c05c58017930e752e738afaa1fcda1b2232e6","example":{"name":"Hello World","category":"Get Started","description":"A simple Hello World example","author":"Intel Corporation","date":"2016-01-01","sample_readme_uri":"https://github.com/intel-iot-devkit/iot-devkit-samples/blob/iss2020-update1/hello-world/readme.md","categories":["Code Samples/Get Started"],"dependencies":[],"main":"main.py","environmentVariables":{"HW":"fish"},"projectOptions":[{"projectType":"python"}]}},{"path":"iot-devkit-samples-625c05c58017930e752e738afaa1fcda1b2232e6/onboard-blink","sha":"625c05c58017930e752e738afaa1fcda1b2232e6","example":{"name":"On-Board LED Blink","category":"Get Started","description":"Demonstrate how to blink the on board LED, writing a digital value to an output pin using the MRAA library","author":"Intel Corporation","date":"2016-06-13","platform":{"hwreq":["gpio"],"libs":["mraa"]},"sample_readme_uri":"https://github.com/intel-iot-devkit/iot-devkit-samples/blob/iss2020-update1/onboard-blink/README.md","categories":["Code Samples/Get Started"],"dependencies":["mraa","iot-plugin"],"main":"blink.py","projectOptions":[{"projectType":"python"}]}},{"path":"iot-devkit-samples-625c05c58017930e752e738afaa1fcda1b2232e6/pwm","sha":"625c05c58017930e752e738afaa1fcda1b2232e6","example":{"name":"Pulse Width Modulation (PWM)","category":"Grove Starter Kit","description":"Demonstrate how to use PWM with an output pin using the MRAA library. If the output is connected to a led, its intensity, as perceived by the human eye, will vary depending on the duty cycle.","author":"Intel Corporation","date":"2016-07-06","platform":{"hwreq":["Output connected to digital pin 5 (Grove Base Shield Port D5)"],"libs":["mraa"]},"sample_readme_uri":"https://github.com/intel-iot-devkit/iot-devkit-samples/blob/iss2020-update1/pwm/README.md","categories":["Code Samples/Sensors"],"dependencies":["mraa","iot-plugin"],"main":"pwm.py","projectOptions":[{"projectType":"python"}]}},{"path":"system-samples-a54ff10cdb1cffa1175fe07dc2f36de9fafbf798/daal/neural_networks","sha":"a54ff10cdb1cffa1175fe07dc2f36de9fafbf798","example":{"name":"Neural Networks","category":"Intel® Data Analytics Acceleration Library","categories":["Code Samples/Software Optimization","Tool Samples/Intel® Data Analytics Acceleration Library"],"description":"Neural networks samples for the Intel® Data Analytics Acceleration Library (Intel® DAAL) are designed to show how to use this library to create most common neural network topologies such as LeNet, AlexNet, GoogleNet in a C++ application.","author":"Intel Corporation","date":"2018-02-26","tag":"system","sample_readme_uri":"https://cdn.rawgit.com/intel-system-studio/samples/iss2020-update1/daal/neural_networks/cpp/readme.html","dependencies":["daal","tbb"],"main":"launcher.py","projectOptions":[{"projectType":"python"}]}},{"path":"openvino-samples-310443142e8b0cc3139d8f654b3b6ddad835aa12/openvino/classification_sample","sha":"310443142e8b0cc3139d8f654b3b6ddad835aa12","example":{"name":"Image Classification","category":"OpenVINO™ Toolkit","categories":["Tool Samples/OpenVINO™ Toolkit","Code Samples/Get Started"],"cmakeDefines":[{"name":"ENABLE_SSE42","type":"STRING","value":"ON"}],"description":"This sample demonstrates how to run the Image Classification sample application with inference executed in the asynchronous mode.\nAttention: This sample requires a specific Docker Image. Before continuing to create this sample see this guide: https://intel.ly/2qQQsPm","author":"Intel Corporation","date":"2019-9-27","sample_readme_uri":"https://intel.ly/2OTFtg7","dependencies":["openvino"],"dockerDependencies":[{"feature":"OpenVINO","type":"error","content":"This sample requires a Docker Image that supports OpenVINO. Select the OpenVINO platform/Docker image below."},{"feature":"OpenVINO-2019-R3","type":"warning","content":"This sample has been tested with OpenVINO 2019 R3. It might not build or work properly if you use a different release of OpenVINO."}],"main":"classification_sample.py","projectOptions":[{"projectType":"python"}]}}]